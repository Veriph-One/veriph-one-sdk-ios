// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0 effective-5.10 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)
// swift-module-flags: -target arm64-apple-ios15.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name VeriphOne
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
import Combine
import Foundation
import Network
import Swift
import SwiftUI
import UIKit
@_exported import VeriphOne
import WebKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public func registerTypeface(fontUrl: CoreFoundation.CFURL)
@_Concurrency.MainActor @preconcurrency public struct VeriphOneView : SwiftUICore.View {
  @_Concurrency.MainActor @preconcurrency public init(sessionUuid: Swift.String, apiKey: Swift.String, uiConfig: VeriphOne.UIConfig? = nil, completion: @escaping (Swift.String?) -> Swift.Void)
  @_Concurrency.MainActor @preconcurrency public var body: some SwiftUICore.View {
    get
  }
  @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
  public typealias Body = @_opaqueReturnTypeOf("$s9VeriphOne0aB4ViewV4bodyQrvp", 0) __
}
public struct TypefaceUsage {
  public let useInTitles: Swift.Bool
  public let useInBodies: Swift.Bool
  public let useInButtons: Swift.Bool
  public let useInTextFields: Swift.Bool
  public init(useInTitles: Swift.Bool, useInBodies: Swift.Bool, useInButtons: Swift.Bool, useInTextFields: Swift.Bool)
}
public struct TypefaceBundle {
  public let fontName: Swift.String
  public let fontUrl: CoreFoundation.CFURL
  public let size: CoreFoundation.CGFloat
  public let usage: VeriphOne.TypefaceUsage
  public init(fontName: Swift.String, fontUrl: CoreFoundation.CFURL, size: CoreFoundation.CGFloat, usage: VeriphOne.TypefaceUsage)
}
public struct TypographySettings {
  public let typefaces: [VeriphOne.TypefaceBundle]
  public init(typefaces: [VeriphOne.TypefaceBundle])
}
public struct UIConfig {
  public let typography: VeriphOne.TypographySettings?
  public init(typography: VeriphOne.TypographySettings?)
}
extension VeriphOne.VeriphOneView : Swift.Sendable {}
